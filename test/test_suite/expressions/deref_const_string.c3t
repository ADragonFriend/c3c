module test;
import std;

const char *VOWS = "aeiou";
const char *CONS = "bcdfghjklmnpqrstvwxyz";
const char *TEST = "";

fn int main (String[] args)
{
	char a = *VOWS;
	char b = *CONS;
	char c = *TEST;
	return 0;
}

/* #expect: test.ll



---------------------------------------------------> test.ll


; ModuleID = 'test'
source_filename = "test"
target datalayout = "e-m:o-i64:64-i128:128-n32:64-S128"
target triple = "aarch64-apple-macosx11.0.0"

%any = type { ptr, i64 }
%.introspect = type { i8, i64, ptr, i64, i64, i64, [0 x i64] }
%"char[][]" = type { ptr, i64 }
%"char[]" = type { ptr, i64 }
%"any[]" = type { ptr, i64 }

@.str = private unnamed_addr constant [6 x i8] c"aeiou\00", align 1
@test.VOWS = local_unnamed_addr constant ptr @.str, align 8
@.str.3 = private unnamed_addr constant [22 x i8] c"bcdfghjklmnpqrstvwxyz\00", align 1
@test.CONS = local_unnamed_addr constant ptr @.str.3, align 8
@.str.4 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@test.TEST = local_unnamed_addr constant ptr @.str.4, align 8

define i32 @test.main([2 x i64] %0) #0 {
entry:
  %args = alloca %"char[][]", align 8
  %a = alloca i8, align 1
  %b = alloca i8, align 1
  %c = alloca i8, align 1
  store [2 x i64] %0, ptr %args, align 8
  store i8 97, ptr %a, align 1
  store i8 98, ptr %b, align 1
  store i8 0, ptr %c, align 1
  ret i32 0
}
