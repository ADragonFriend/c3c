// #target: macos-x64
// #safe: yes
module test;
fn void main()
{
	int a = -1;
	assert(a > 0);
}

/* #expect: test.ll

@.panic_msg = internal constant [23 x i8] c"Assert \22a > 0\22 failed.\00", align 1

define void @test.main() #0 {
entry:
  %a = alloca i32, align 4
  store i32 -1, ptr %a, align 4
  %0 = load i32, ptr %a, align 4
  %gt = icmp sgt i32 %0, 0
  br i1 %gt, label %assert_ok, label %assert_fail

assert_fail:                                      ; preds = %entry
  %1 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %1(ptr @.panic_msg, i64 22, ptr @.file, i64 23, ptr @.func, i64 4, i32 5) #1
  unreachable

assert_ok:                                        ; preds = %entry
  ret void
}
