// #target: macos-x64
module test;
import std::io;

bitstruct Foo : ulong
{
	uint x : 0..31;
	uint y : 32..62;
	bool w : 63;
}

bitstruct Bar : char[8]
{
	uint x : 0..31;
	uint y : 32..62;
	bool w : 63;
}
struct Abc
{
	int x;
	Foo b;
}

fn void hello(int z)
{
	Foo x;
	x = { .x = z, .w = z < 100 };
	Abc y = { .b.x = 32, .b.y = 10 };
	Abc d = { .b = { 23, 11, true } };
	Bar b;
	b = { .x = z, .w = z < 100 };
	io::printfn("%s %s %s", x.x, x.y, x.w);
	io::printfn("%s %s %s", y.b.x, y.b.y, y.b.w);
	io::printfn("%s %s %s", b.x, b.y, b.w);
	x = { z + 1, 1, z > 100 };
	y.b = { 33, 11, true };
	b = {  z + 1, 1, z > 100 };
	io::printfn("%s %s %s", x.x, x.y, x.w);
    io::printfn("%s %s %s", y.b.x, y.b.y, y.b.w);
    io::printfn("%s %s %s", b.x, b.y, b.w);

}

fn void main()
{
	hello(12);
}

/* #expect: test.ll

define void @test.hello(i32 %0) #0 {
entry:
  %x = alloca i64, align 8
  %y = alloca %Abc, align 8
  %d = alloca %Abc, align 8
  %b = alloca [8 x i8], align 1
  %varargslots = alloca [3 x %any], align 16
  %taddr = alloca i32, align 4
  %taddr32 = alloca i32, align 4
  %taddr36 = alloca i8, align 1
  %retparam = alloca i64, align 8
  %varargslots38 = alloca [3 x %any], align 16
  %taddr41 = alloca i32, align 4
  %taddr45 = alloca i32, align 4
  %taddr50 = alloca i8, align 1
  %retparam52 = alloca i64, align 8
  %varargslots53 = alloca [3 x %any], align 16
  %taddr64 = alloca i32, align 4
  %taddr76 = alloca i32, align 4
  %taddr80 = alloca i8, align 1
  %retparam82 = alloca i64, align 8
  %varargslots113 = alloca [3 x %any], align 16
  %taddr115 = alloca i32, align 4
  %taddr118 = alloca i32, align 4
  %taddr122 = alloca i8, align 1
  %retparam124 = alloca i64, align 8
  %varargslots125 = alloca [3 x %any], align 16
  %taddr128 = alloca i32, align 4
  %taddr132 = alloca i32, align 4
  %taddr137 = alloca i8, align 1
  %retparam139 = alloca i64, align 8
  %varargslots140 = alloca [3 x %any], align 16
  %taddr151 = alloca i32, align 4
  %taddr163 = alloca i32, align 4
  %taddr167 = alloca i8, align 1
  %retparam169 = alloca i64, align 8
  store i64 0, ptr %x, align 8
  %zext = zext i32 %0 to i64
  %1 = and i64 %zext, 4294967295
  %lt = icmp slt i32 %0, 100
  %2 = zext i1 %lt to i8
  %zext1 = zext i8 %2 to i64
  %shl = shl i64 %zext1, 63
  %3 = and i64 %shl, -9223372036854775808
  %4 = and i64 %1, 9223372036854775807
  %5 = or i64 %4, %3
  store i64 %5, ptr %x, align 8
  store i32 0, ptr %y, align 8
  %ptradd = getelementptr inbounds i8, ptr %y, i64 8
  store i64 42949672992, ptr %ptradd, align 8
  store i32 0, ptr %d, align 8
  %ptradd2 = getelementptr inbounds i8, ptr %d, i64 8
  store i64 -9223371989610135529, ptr %ptradd2, align 8
  store i8 0, ptr %b, align 1
  %ptradd3 = getelementptr inbounds i8, ptr %b, i64 1
  store i8 0, ptr %ptradd3, align 1
  %ptradd4 = getelementptr inbounds i8, ptr %b, i64 2
  store i8 0, ptr %ptradd4, align 1
  %ptradd5 = getelementptr inbounds i8, ptr %b, i64 3
  store i8 0, ptr %ptradd5, align 1
  %ptradd6 = getelementptr inbounds i8, ptr %b, i64 4
  store i8 0, ptr %ptradd6, align 1
  %ptradd7 = getelementptr inbounds i8, ptr %b, i64 5
  store i8 0, ptr %ptradd7, align 1
  %ptradd8 = getelementptr inbounds i8, ptr %b, i64 6
  store i8 0, ptr %ptradd8, align 1
  %ptradd9 = getelementptr inbounds i8, ptr %b, i64 7
  store i8 0, ptr %ptradd9, align 1
  store i8 0, ptr %b, align 1
  %ptradd10 = getelementptr inbounds i8, ptr %b, i64 1
  store i8 0, ptr %ptradd10, align 1
  %ptradd11 = getelementptr inbounds i8, ptr %b, i64 2
  store i8 0, ptr %ptradd11, align 1
  %ptradd12 = getelementptr inbounds i8, ptr %b, i64 3
  store i8 0, ptr %ptradd12, align 1
  %ptradd13 = getelementptr inbounds i8, ptr %b, i64 4
  store i8 0, ptr %ptradd13, align 1
  %ptradd14 = getelementptr inbounds i8, ptr %b, i64 5
  store i8 0, ptr %ptradd14, align 1
  %ptradd15 = getelementptr inbounds i8, ptr %b, i64 6
  store i8 0, ptr %ptradd15, align 1
  %ptradd16 = getelementptr inbounds i8, ptr %b, i64 7
  store i8 0, ptr %ptradd16, align 1
  %trunc = trunc i32 %0 to i8
  store i8 %trunc, ptr %b, align 1
  %lshrl = lshr i32 %0, 8
  %ptradd17 = getelementptr inbounds i8, ptr %b, i64 1
  %trunc18 = trunc i32 %lshrl to i8
  store i8 %trunc18, ptr %ptradd17, align 1
  %lshrl19 = lshr i32 %lshrl, 8
  %ptradd20 = getelementptr inbounds i8, ptr %b, i64 2
  %trunc21 = trunc i32 %lshrl19 to i8
  store i8 %trunc21, ptr %ptradd20, align 1
  %lshrl22 = lshr i32 %lshrl19, 8
  %ptradd23 = getelementptr inbounds i8, ptr %b, i64 3
  %trunc24 = trunc i32 %lshrl22 to i8
  store i8 %trunc24, ptr %ptradd23, align 1
  %lshrl25 = lshr i32 %lshrl22, 8
  %lt26 = icmp slt i32 %0, 100
  %6 = zext i1 %lt26 to i8
  %shl27 = shl i8 %6, 7
  %ptradd28 = getelementptr inbounds i8, ptr %b, i64 7
  %7 = load i8, ptr %ptradd28, align 1
  %8 = and i8 %7, 127
  %9 = or i8 %8, %shl27
  store i8 %9, ptr %ptradd28, align 1
  %10 = load i64, ptr %x, align 8
  %11 = and i64 4294967295, %10
  %trunc29 = trunc i64 %11 to i32
  store i32 %trunc29, ptr %taddr, align 4
  %12 = insertvalue %any undef, ptr %taddr, 0
  %13 = insertvalue %any %12, i64 ptrtoint (ptr @"$ct.uint" to i64), 1
  store %any %13, ptr %varargslots, align 16
  %14 = load i64, ptr %x, align 8
  %lshrl30 = lshr i64 %14, 32
  %15 = and i64 2147483647, %lshrl30
  %trunc31 = trunc i64 %15 to i32
  store i32 %trunc31, ptr %taddr32, align 4
  %16 = insertvalue %any undef, ptr %taddr32, 0
  %17 = insertvalue %any %16, i64 ptrtoint (ptr @"$ct.uint" to i64), 1
  %ptradd33 = getelementptr inbounds i8, ptr %varargslots, i64 16
  store %any %17, ptr %ptradd33, align 16
  %18 = load i64, ptr %x, align 8
  %lshrl34 = lshr i64 %18, 63
  %19 = and i64 1, %lshrl34
  %trunc35 = trunc i64 %19 to i8
  store i8 %trunc35, ptr %taddr36, align 1
  %20 = insertvalue %any undef, ptr %taddr36, 0
  %21 = insertvalue %any %20, i64 ptrtoint (ptr @"$ct.bool" to i64), 1
  %ptradd37 = getelementptr inbounds i8, ptr %varargslots, i64 32
  store %any %21, ptr %ptradd37, align 16
  %22 = call i64 @std.io.printfn(ptr %retparam, ptr @.str, i64 8, ptr %varargslots, i64 3)
  %ptradd39 = getelementptr inbounds i8, ptr %y, i64 8
  %23 = load i64, ptr %ptradd39, align 8
  %24 = and i64 4294967295, %23
  %trunc40 = trunc i64 %24 to i32
  store i32 %trunc40, ptr %taddr41, align 4
  %25 = insertvalue %any undef, ptr %taddr41, 0
  %26 = insertvalue %any %25, i64 ptrtoint (ptr @"$ct.uint" to i64), 1
  store %any %26, ptr %varargslots38, align 16
  %ptradd42 = getelementptr inbounds i8, ptr %y, i64 8
  %27 = load i64, ptr %ptradd42, align 8
  %lshrl43 = lshr i64 %27, 32
  %28 = and i64 2147483647, %lshrl43
  %trunc44 = trunc i64 %28 to i32
  store i32 %trunc44, ptr %taddr45, align 4
  %29 = insertvalue %any undef, ptr %taddr45, 0
  %30 = insertvalue %any %29, i64 ptrtoint (ptr @"$ct.uint" to i64), 1
  %ptradd46 = getelementptr inbounds i8, ptr %varargslots38, i64 16
  store %any %30, ptr %ptradd46, align 16
  %ptradd47 = getelementptr inbounds i8, ptr %y, i64 8
  %31 = load i64, ptr %ptradd47, align 8
  %lshrl48 = lshr i64 %31, 63
  %32 = and i64 1, %lshrl48
  %trunc49 = trunc i64 %32 to i8
  store i8 %trunc49, ptr %taddr50, align 1
  %33 = insertvalue %any undef, ptr %taddr50, 0
  %34 = insertvalue %any %33, i64 ptrtoint (ptr @"$ct.bool" to i64), 1
  %ptradd51 = getelementptr inbounds i8, ptr %varargslots38, i64 32
  store %any %34, ptr %ptradd51, align 16
  %35 = call i64 @std.io.printfn(ptr %retparam52, ptr @.str.1, i64 8, ptr %varargslots38, i64 3)
  %36 = load i8, ptr %b, align 1
  %zext54 = zext i8 %36 to i32
  %ptradd55 = getelementptr inbounds i8, ptr %b, i64 1
  %37 = load i8, ptr %ptradd55, align 1
  %zext56 = zext i8 %37 to i32
  %shl57 = shl i32 %zext56, 8
  %38 = or i32 %shl57, %zext54
  %ptradd58 = getelementptr inbounds i8, ptr %b, i64 2
  %39 = load i8, ptr %ptradd58, align 1
  %zext59 = zext i8 %39 to i32
  %shl60 = shl i32 %zext59, 16
  %40 = or i32 %shl60, %38
  %ptradd61 = getelementptr inbounds i8, ptr %b, i64 3
  %41 = load i8, ptr %ptradd61, align 1
  %zext62 = zext i8 %41 to i32
  %shl63 = shl i32 %zext62, 24
  %42 = or i32 %shl63, %40
  store i32 %42, ptr %taddr64, align 4
  %43 = insertvalue %any undef, ptr %taddr64, 0
  %44 = insertvalue %any %43, i64 ptrtoint (ptr @"$ct.uint" to i64), 1
  store %any %44, ptr %varargslots53, align 16
  %ptradd65 = getelementptr inbounds i8, ptr %b, i64 4
  %45 = load i8, ptr %ptradd65, align 1
  %zext66 = zext i8 %45 to i32
  %ptradd67 = getelementptr inbounds i8, ptr %b, i64 5
  %46 = load i8, ptr %ptradd67, align 1
  %zext68 = zext i8 %46 to i32
  %shl69 = shl i32 %zext68, 8
  %47 = or i32 %shl69, %zext66
  %ptradd70 = getelementptr inbounds i8, ptr %b, i64 6
  %48 = load i8, ptr %ptradd70, align 1
  %zext71 = zext i8 %48 to i32
  %shl72 = shl i32 %zext71, 16
  %49 = or i32 %shl72, %47
  %ptradd73 = getelementptr inbounds i8, ptr %b, i64 7
  %50 = load i8, ptr %ptradd73, align 1
  %zext74 = zext i8 %50 to i32
  %shl75 = shl i32 %zext74, 24
  %51 = or i32 %shl75, %49
  %52 = and i32 2147483647, %51
  store i32 %52, ptr %taddr76, align 4
  %53 = insertvalue %any undef, ptr %taddr76, 0
  %54 = insertvalue %any %53, i64 ptrtoint (ptr @"$ct.uint" to i64), 1
  %ptradd77 = getelementptr inbounds i8, ptr %varargslots53, i64 16
  store %any %54, ptr %ptradd77, align 16
  %ptradd78 = getelementptr inbounds i8, ptr %b, i64 7
  %55 = load i8, ptr %ptradd78, align 1
  %lshrl79 = lshr i8 %55, 7
  %56 = trunc i8 %lshrl79 to i1
  %57 = zext i1 %56 to i8
  store i8 %57, ptr %taddr80, align 1
  %58 = insertvalue %any undef, ptr %taddr80, 0
  %59 = insertvalue %any %58, i64 ptrtoint (ptr @"$ct.bool" to i64), 1
  %ptradd81 = getelementptr inbounds i8, ptr %varargslots53, i64 32
  store %any %59, ptr %ptradd81, align 16
  %60 = call i64 @std.io.printfn(ptr %retparam82, ptr @.str.2, i64 8, ptr %varargslots53, i64 3)
  %add = add i32 %0, 1
  %zext83 = zext i32 %add to i64
  %61 = and i64 %zext83, 4294967295
  %62 = and i64 %61, -9223372032559808513
  %63 = or i64 %62, 4294967296
  %gt = icmp sgt i32 %0, 100
  %64 = zext i1 %gt to i8
  %zext84 = zext i8 %64 to i64
  %shl85 = shl i64 %zext84, 63
  %65 = and i64 %shl85, -9223372036854775808
  %66 = and i64 %63, 9223372036854775807
  %67 = or i64 %66, %65
  store i64 %67, ptr %x, align 8
  %ptradd86 = getelementptr inbounds i8, ptr %y, i64 8
  store i64 -9223371989610135519, ptr %ptradd86, align 8
  store i8 0, ptr %b, align 1
  %ptradd87 = getelementptr inbounds i8, ptr %b, i64 1
  store i8 0, ptr %ptradd87, align 1
  %ptradd88 = getelementptr inbounds i8, ptr %b, i64 2
  store i8 0, ptr %ptradd88, align 1
  %ptradd89 = getelementptr inbounds i8, ptr %b, i64 3
  store i8 0, ptr %ptradd89, align 1
  %ptradd90 = getelementptr inbounds i8, ptr %b, i64 4
  store i8 0, ptr %ptradd90, align 1
  %ptradd91 = getelementptr inbounds i8, ptr %b, i64 5
  store i8 0, ptr %ptradd91, align 1
  %ptradd92 = getelementptr inbounds i8, ptr %b, i64 6
  store i8 0, ptr %ptradd92, align 1
  %ptradd93 = getelementptr inbounds i8, ptr %b, i64 7
  store i8 0, ptr %ptradd93, align 1
  %add94 = add i32 %0, 1
  %trunc95 = trunc i32 %add94 to i8
  store i8 %trunc95, ptr %b, align 1
  %lshrl96 = lshr i32 %add94, 8
  %ptradd97 = getelementptr inbounds i8, ptr %b, i64 1
  %trunc98 = trunc i32 %lshrl96 to i8
  store i8 %trunc98, ptr %ptradd97, align 1
  %lshrl99 = lshr i32 %lshrl96, 8
  %ptradd100 = getelementptr inbounds i8, ptr %b, i64 2
  %trunc101 = trunc i32 %lshrl99 to i8
  store i8 %trunc101, ptr %ptradd100, align 1
  %lshrl102 = lshr i32 %lshrl99, 8
  %ptradd103 = getelementptr inbounds i8, ptr %b, i64 3
  %trunc104 = trunc i32 %lshrl102 to i8
  store i8 %trunc104, ptr %ptradd103, align 1
  %lshrl105 = lshr i32 %lshrl102, 8
  %ptradd106 = getelementptr inbounds i8, ptr %b, i64 4
  store i8 1, ptr %ptradd106, align 1
  %ptradd107 = getelementptr inbounds i8, ptr %b, i64 5
  store i8 0, ptr %ptradd107, align 1
  %ptradd108 = getelementptr inbounds i8, ptr %b, i64 6
  store i8 0, ptr %ptradd108, align 1
  %ptradd109 = getelementptr inbounds i8, ptr %b, i64 7
  %68 = load i8, ptr %ptradd109, align 1
  %69 = and i8 %68, -128
  store i8 %69, ptr %ptradd109, align 1
  %gt110 = icmp sgt i32 %0, 100
  %70 = zext i1 %gt110 to i8
  %shl111 = shl i8 %70, 7
  %ptradd112 = getelementptr inbounds i8, ptr %b, i64 7
  %71 = load i8, ptr %ptradd112, align 1
  %72 = and i8 %71, 127
  %73 = or i8 %72, %shl111
  store i8 %73, ptr %ptradd112, align 1
  %74 = load i64, ptr %x, align 8
  %75 = and i64 4294967295, %74
  %trunc114 = trunc i64 %75 to i32
  store i32 %trunc114, ptr %taddr115, align 4
  %76 = insertvalue %any undef, ptr %taddr115, 0
  %77 = insertvalue %any %76, i64 ptrtoint (ptr @"$ct.uint" to i64), 1
  store %any %77, ptr %varargslots113, align 16
  %78 = load i64, ptr %x, align 8
  %lshrl116 = lshr i64 %78, 32
  %79 = and i64 2147483647, %lshrl116
  %trunc117 = trunc i64 %79 to i32
  store i32 %trunc117, ptr %taddr118, align 4
  %80 = insertvalue %any undef, ptr %taddr118, 0
  %81 = insertvalue %any %80, i64 ptrtoint (ptr @"$ct.uint" to i64), 1
  %ptradd119 = getelementptr inbounds i8, ptr %varargslots113, i64 16
  store %any %81, ptr %ptradd119, align 16
  %82 = load i64, ptr %x, align 8
  %lshrl120 = lshr i64 %82, 63
  %83 = and i64 1, %lshrl120
  %trunc121 = trunc i64 %83 to i8
  store i8 %trunc121, ptr %taddr122, align 1
  %84 = insertvalue %any undef, ptr %taddr122, 0
  %85 = insertvalue %any %84, i64 ptrtoint (ptr @"$ct.bool" to i64), 1
  %ptradd123 = getelementptr inbounds i8, ptr %varargslots113, i64 32
  store %any %85, ptr %ptradd123, align 16
  %86 = call i64 @std.io.printfn(ptr %retparam124, ptr @.str.3, i64 8, ptr %varargslots113, i64 3)
  %ptradd126 = getelementptr inbounds i8, ptr %y, i64 8
  %87 = load i64, ptr %ptradd126, align 8
  %88 = and i64 4294967295, %87
  %trunc127 = trunc i64 %88 to i32
  store i32 %trunc127, ptr %taddr128, align 4
  %89 = insertvalue %any undef, ptr %taddr128, 0
  %90 = insertvalue %any %89, i64 ptrtoint (ptr @"$ct.uint" to i64), 1
  store %any %90, ptr %varargslots125, align 16
  %ptradd129 = getelementptr inbounds i8, ptr %y, i64 8
  %91 = load i64, ptr %ptradd129, align 8
  %lshrl130 = lshr i64 %91, 32
  %92 = and i64 2147483647, %lshrl130
  %trunc131 = trunc i64 %92 to i32
  store i32 %trunc131, ptr %taddr132, align 4
  %93 = insertvalue %any undef, ptr %taddr132, 0
  %94 = insertvalue %any %93, i64 ptrtoint (ptr @"$ct.uint" to i64), 1
  %ptradd133 = getelementptr inbounds i8, ptr %varargslots125, i64 16
  store %any %94, ptr %ptradd133, align 16
  %ptradd134 = getelementptr inbounds i8, ptr %y, i64 8
  %95 = load i64, ptr %ptradd134, align 8
  %lshrl135 = lshr i64 %95, 63
  %96 = and i64 1, %lshrl135
  %trunc136 = trunc i64 %96 to i8
  store i8 %trunc136, ptr %taddr137, align 1
  %97 = insertvalue %any undef, ptr %taddr137, 0
  %98 = insertvalue %any %97, i64 ptrtoint (ptr @"$ct.bool" to i64), 1
  %ptradd138 = getelementptr inbounds i8, ptr %varargslots125, i64 32
  store %any %98, ptr %ptradd138, align 16
  %99 = call i64 @std.io.printfn(ptr %retparam139, ptr @.str.4, i64 8, ptr %varargslots125, i64 3)
  %100 = load i8, ptr %b, align 1
  %zext141 = zext i8 %100 to i32
  %ptradd142 = getelementptr inbounds i8, ptr %b, i64 1
  %101 = load i8, ptr %ptradd142, align 1
  %zext143 = zext i8 %101 to i32
  %shl144 = shl i32 %zext143, 8
  %102 = or i32 %shl144, %zext141
  %ptradd145 = getelementptr inbounds i8, ptr %b, i64 2
  %103 = load i8, ptr %ptradd145, align 1
  %zext146 = zext i8 %103 to i32
  %shl147 = shl i32 %zext146, 16
  %104 = or i32 %shl147, %102
  %ptradd148 = getelementptr inbounds i8, ptr %b, i64 3
  %105 = load i8, ptr %ptradd148, align 1
  %zext149 = zext i8 %105 to i32
  %shl150 = shl i32 %zext149, 24
  %106 = or i32 %shl150, %104
  store i32 %106, ptr %taddr151, align 4
  %107 = insertvalue %any undef, ptr %taddr151, 0
  %108 = insertvalue %any %107, i64 ptrtoint (ptr @"$ct.uint" to i64), 1
  store %any %108, ptr %varargslots140, align 16
  %ptradd152 = getelementptr inbounds i8, ptr %b, i64 4
  %109 = load i8, ptr %ptradd152, align 1
  %zext153 = zext i8 %109 to i32
  %ptradd154 = getelementptr inbounds i8, ptr %b, i64 5
  %110 = load i8, ptr %ptradd154, align 1
  %zext155 = zext i8 %110 to i32
  %shl156 = shl i32 %zext155, 8
  %111 = or i32 %shl156, %zext153
  %ptradd157 = getelementptr inbounds i8, ptr %b, i64 6
  %112 = load i8, ptr %ptradd157, align 1
  %zext158 = zext i8 %112 to i32
  %shl159 = shl i32 %zext158, 16
  %113 = or i32 %shl159, %111
  %ptradd160 = getelementptr inbounds i8, ptr %b, i64 7
  %114 = load i8, ptr %ptradd160, align 1
  %zext161 = zext i8 %114 to i32
  %shl162 = shl i32 %zext161, 24
  %115 = or i32 %shl162, %113
  %116 = and i32 2147483647, %115
  store i32 %116, ptr %taddr163, align 4
  %117 = insertvalue %any undef, ptr %taddr163, 0
  %118 = insertvalue %any %117, i64 ptrtoint (ptr @"$ct.uint" to i64), 1
  %ptradd164 = getelementptr inbounds i8, ptr %varargslots140, i64 16
  store %any %118, ptr %ptradd164, align 16
  %ptradd165 = getelementptr inbounds i8, ptr %b, i64 7
  %119 = load i8, ptr %ptradd165, align 1
  %lshrl166 = lshr i8 %119, 7
  %120 = trunc i8 %lshrl166 to i1
  %121 = zext i1 %120 to i8
  store i8 %121, ptr %taddr167, align 1
  %122 = insertvalue %any undef, ptr %taddr167, 0
  %123 = insertvalue %any %122, i64 ptrtoint (ptr @"$ct.bool" to i64), 1
  %ptradd168 = getelementptr inbounds i8, ptr %varargslots140, i64 32
  store %any %123, ptr %ptradd168, align 16
  %124 = call i64 @std.io.printfn(ptr %retparam169, ptr @.str.5, i64 8, ptr %varargslots140, i64 3)
  ret void
}

; Function Attrs: nounwind uwtable
define void @test.main() #0 {
entry:
  call void @test.hello(i32 12)
  ret void
}
